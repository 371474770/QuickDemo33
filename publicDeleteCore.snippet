<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>publicDeleteCore</Title>
      <Shortcut>publicDeleteCore</Shortcut>
      <Description>public IHttpActionResult Post 的代码片段</Description>
      <Author>Microsoft Corporation</Author>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
        <SnippetType>SurroundsWith</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>expression</ID>
          <ToolTip>异常类型</ToolTip>
          <Function>SimpleTypeName(global::System.Exception)</Function>
        </Literal>
      </Declarations>
      <Code Language="csharp">
        <![CDATA[/// <summary>
        /// 默认删除
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [HttpDelete,Route("Delete/{id}")]
         public IActionResult Delete(int id)
         {
          BaseResult result = new BaseResult();
				    try 
				    {	        
					      if (!_context.xxxx.Any(x => x.ID == id))
                {
                    result.code = (int)Const.c_code.参数错误;
                    result.message = "没有此记录，不能删除";
                }
                else
                {
                    xxxx dny = new xxxx { ID = id };
                    _context.Entry(dny).State = EntityState.Deleted;
                    _context.SaveChanges();
                }
				    }
				    catch ($expression$ ex)
				    {
					     result.code = (int)Const.c_code.抛出异常;
					     result.message = Const.c_code.抛出异常.ToString();
               Log.CreateLog(Log.LOG_ERROR, _getuserdata.UserName, "Delete",  ex.Message);
				    }
				    return Ok(result);
          }$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
